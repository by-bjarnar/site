/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadUserRolesField".
 */
export type PayloadUserRolesField = ('admin' | 'editor' | 'public')[];
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkArrayField".
 */
export type PayloadLinkArrayField =
  | {
      text: string;
      type: 'internal' | 'external';
      relationship?: (string | null) | PayloadPagesCollection;
      anchor?: string | null;
      url?: string | null;
      rel?: PayloadRelField;
      newTab?: boolean | null;
      umamiEvent?: string | null;
      umamiEventId?: string | null;
      icon?: PayloadIconField;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadRelField".
 */
export type PayloadRelField = ('noopener' | 'noreferrer' | 'nofollow')[] | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadIconField".
 */
export type PayloadIconField =
  | ('arrowRight' | 'bluesky' | 'close' | 'fiverr' | 'instagram' | 'letterboxd' | 'tiktok' | 'x')
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadButtonVariantField".
 */
export type PayloadButtonVariantField = 'primary' | 'secondary' | 'tertiary';
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadButtonSizeField".
 */
export type PayloadButtonSizeField = 'sm' | 'md' | 'lg';
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadButtonIconPositionField".
 */
export type PayloadButtonIconPositionField = ('left' | 'right' | 'center') | null;

export interface Config {
  auth: {
    clients: ClientAuthOperations;
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: PayloadPagesCollection;
    articles: PayloadArticlesCollection;
    clients: PayloadClientsCollection;
    forms: PayloadFormsCollection;
    'form-submissions': PayloadFormSubmissionsCollection;
    images: PayloadImagesCollection;
    users: PayloadUsersCollection;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    clients: {
      forms: 'form-submissions';
    };
  };
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    articles: ArticlesSelect<false> | ArticlesSelect<true>;
    clients: ClientsSelect<false> | ClientsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    images: ImagesSelect<false> | ImagesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    navigation: PayloadNavigationGlobal;
    footer: PayloadFooterGlobal;
  };
  globalsSelect: {
    navigation: NavigationSelect<false> | NavigationSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user:
    | (PayloadClientsCollection & {
        collection: 'clients';
      })
    | (PayloadUsersCollection & {
        collection: 'users';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface ClientAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface PayloadPagesCollection {
  id: string;
  title: string;
  description: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  parent?: (string | null) | PayloadPagesCollection;
  slug?: string | null;
  path?: string | null;
  breadcrumbs?:
    | {
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles".
 */
export interface PayloadArticlesCollection {
  id: string;
  title: string;
  description: string;
  image?: (string | null) | PayloadImagesCollection;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  published?: string | null;
  type: 'internal' | 'external';
  url?: string | null;
  urlMetadata?: {
    title?: string | null;
    description?: string | null;
    image?: string | null;
    published?: string | null;
    site?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images".
 */
export interface PayloadImagesCollection {
  id: string;
  alt: string;
  displayOriginal?: boolean | null;
  dataUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    preview?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients".
 */
export interface PayloadClientsCollection {
  id: string;
  name: string;
  phoneNumber?: string | null;
  forms?: {
    docs?: (string | PayloadFormSubmissionsCollection)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface PayloadFormSubmissionsCollection {
  id: string;
  form: string | PayloadFormsCollection;
  client?: (string | null) | PayloadClientsCollection;
  data: {
    label: string;
    name: string;
    value: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface PayloadFormsCollection {
  id: string;
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  submitButtonLabel: string;
  confirmationMessage: string;
  fields: (PayloadTextBlock | PayloadTextareaBlock | PayloadEmailBlock | PayloadPhoneNumberBlock)[];
  /**
   * If checked, hides title and description.
   */
  formOnly: boolean;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadTextBlock".
 */
export interface PayloadTextBlock {
  name: string;
  label: string;
  placeholder?: string | null;
  width: 'half' | 'full';
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  defaultValue?: string | null;
  required: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'text';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadTextareaBlock".
 */
export interface PayloadTextareaBlock {
  name: string;
  label: string;
  placeholder?: string | null;
  width: 'half' | 'full';
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  defaultValue?: string | null;
  required: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textarea';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadEmailBlock".
 */
export interface PayloadEmailBlock {
  name: string;
  label: string;
  placeholder?: string | null;
  width: 'half' | 'full';
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  defaultValue?: string | null;
  required: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'email';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadPhoneNumberBlock".
 */
export interface PayloadPhoneNumberBlock {
  name: string;
  label: string;
  placeholder?: string | null;
  width: 'half' | 'full';
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  defaultValue?: string | null;
  required: boolean;
  id?: string | null;
  blockName?: string | null;
  blockType: 'phoneNumber';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface PayloadUsersCollection {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles: PayloadUserRolesField;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | PayloadPagesCollection;
      } | null)
    | ({
        relationTo: 'articles';
        value: string | PayloadArticlesCollection;
      } | null)
    | ({
        relationTo: 'clients';
        value: string | PayloadClientsCollection;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | PayloadFormsCollection;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | PayloadFormSubmissionsCollection;
      } | null)
    | ({
        relationTo: 'images';
        value: string | PayloadImagesCollection;
      } | null)
    | ({
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'clients';
        value: string | PayloadClientsCollection;
      }
    | {
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user:
    | {
        relationTo: 'clients';
        value: string | PayloadClientsCollection;
      }
    | {
        relationTo: 'users';
        value: string | PayloadUsersCollection;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  content?: T;
  parent?: T;
  slug?: T;
  path?: T;
  breadcrumbs?:
    | T
    | {
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articles_select".
 */
export interface ArticlesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  content?: T;
  slug?: T;
  published?: T;
  type?: T;
  url?: T;
  urlMetadata?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        published?: T;
        site?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clients_select".
 */
export interface ClientsSelect<T extends boolean = true> {
  name?: T;
  phoneNumber?: T;
  forms?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  submitButtonLabel?: T;
  confirmationMessage?: T;
  fields?:
    | T
    | {
        text?: T | PayloadTextBlockSelect<T>;
        textarea?: T | PayloadTextareaBlockSelect<T>;
        email?: T | PayloadEmailBlockSelect<T>;
        phoneNumber?: T | PayloadPhoneNumberBlockSelect<T>;
      };
  formOnly?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadTextBlock_select".
 */
export interface PayloadTextBlockSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  placeholder?: T;
  width?: T;
  description?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadTextareaBlock_select".
 */
export interface PayloadTextareaBlockSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  placeholder?: T;
  width?: T;
  description?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadEmailBlock_select".
 */
export interface PayloadEmailBlockSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  placeholder?: T;
  width?: T;
  description?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadPhoneNumberBlock_select".
 */
export interface PayloadPhoneNumberBlockSelect<T extends boolean = true> {
  name?: T;
  label?: T;
  placeholder?: T;
  width?: T;
  description?: T;
  defaultValue?: T;
  required?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  client?: T;
  data?:
    | T
    | {
        label?: T;
        name?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "images_select".
 */
export interface ImagesSelect<T extends boolean = true> {
  alt?: T;
  displayOriginal?: T;
  dataUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        preview?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface PayloadNavigationGlobal {
  id: string;
  links?: PayloadLinkArrayField;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface PayloadFooterGlobal {
  id: string;
  socialLinks?: PayloadLinkArrayField;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  links?: T | PayloadLinkArrayFieldSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkArrayField_select".
 */
export interface PayloadLinkArrayFieldSelect<T extends boolean = true> {
  text?: T;
  type?: T;
  relationship?: T;
  anchor?: T;
  url?: T;
  rel?: T;
  newTab?: T;
  umamiEvent?: T;
  umamiEventId?: T;
  icon?: T;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  socialLinks?: T | PayloadLinkArrayFieldSelect<T>;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadLinkGroupField".
 */
export interface PayloadLinkGroupField {
  text: string;
  type: 'internal' | 'external';
  relationship?: (string | null) | PayloadPagesCollection;
  anchor?: string | null;
  url?: string | null;
  rel?: PayloadRelField;
  newTab?: boolean | null;
  umamiEvent?: string | null;
  umamiEventId?: string | null;
  id?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadButtonLinkBlock".
 */
export interface PayloadButtonLinkBlock {
  alignment: 'left' | 'center' | 'right';
  variant: PayloadButtonVariantField;
  size: PayloadButtonSizeField;
  icon?: PayloadIconField;
  iconPosition?: PayloadButtonIconPositionField;
  link: PayloadLinkGroupField;
  id?: string | null;
  blockName?: string | null;
  blockType: 'button-link';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadFeaturedBlock".
 */
export interface PayloadFeaturedBlock {
  articles: (string | PayloadArticlesCollection)[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'featured';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadFormBlock".
 */
export interface PayloadFormBlock {
  form: string | PayloadFormsCollection;
  id?: string | null;
  blockName?: string | null;
  blockType: 'form';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PayloadImageBlock".
 */
export interface PayloadImageBlock {
  image: string | PayloadImagesCollection;
  position: 'center' | 'left' | 'right';
  id?: string | null;
  blockName?: string | null;
  blockType: 'image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}